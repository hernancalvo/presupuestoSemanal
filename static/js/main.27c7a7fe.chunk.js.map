{"version":3,"sources":["components/Error.js","components/Pregunta.js","components/Formulario.js","components/Gasto.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","useState","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Formulario","guardarGasto","guardarCrearGasto","nombre","guardarNombre","trim","gasto","id","shortid","generate","Gasto","Listado","gastos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27c7a7fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Error = ({mensaje}) =>  ( \r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n );\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, {Fragment, useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Error from './Error';\r\n\r\nconst Pregunta = ({ guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    // Definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Función que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad(parseInt(e.target.value));\r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if(cantidad <= 0 || isNaN( cantidad )) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n\r\n        // Si se pasa la validación\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n\r\n    return (   \r\n        <Fragment>\r\n            <h2>Coloca tu Presupuesto</h2>\r\n\r\n            { error ? <Error mensaje=\"El Presupuesto es incorrecto\" /> : null }\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input \r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n\r\n     );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pregunta;","import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport shortid from \"shortid\";\r\nimport Error from './Error';\r\n\r\n\r\n\r\nconst Formulario = ({ guardarGasto, guardarCrearGasto }) => {\r\n\r\n    const [ nombre, guardarNombre ] = useState(\"\");\r\n    const [ cantidad, guardarCantidad ] = useState(\"\");\r\n    const [ error, guardarError ] = useState(false);\r\n\r\n    // Cuando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if( cantidad < 0 || isNaN( cantidad ) || nombre.trim() === \"\") {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // Construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        // Pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // Resetear el form\r\n        guardarNombre(\"\");\r\n        guardarCantidad(\"\");\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Agrega tus gastos aquí</h2>\r\n\r\n            { error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\" /> : null }\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value,10))}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n\r\n     );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Gasto = ({gasto}) => ( \r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n );\r\n\r\n Gasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n \r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Listado = ({ gastos }) => ( \r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n        {gastos.map(gasto => (\r\n            <Gasto\r\n            key={gasto.id}\r\n            gasto={gasto}\r\n        />\r\n        ))}\r\n    </div>\r\n );\r\n\r\n Listado.propTypes = {\r\n     gastos: PropTypes.array.isRequired\r\n }\r\n \r\nexport default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if ( (presupuesto / 4 ) > restante ) {\r\n        clase = \"alert alert-danger\";\r\n    } else if ( ( presupuesto / 2) > restante) {\r\n        clase = \"alert alert-warning\"\r\n    } else {\r\n        clase = \"alert alert-success\";\r\n    }\r\n\r\n    return clase;\r\n}","import React, { Fragment } from 'react';\r\nimport { revisarPresupuesto } from \"../helpers\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n \r\nexport default ControlPresupuesto;","import React, { useState, useEffect } from 'react';\nimport Pregunta from \"./components/Pregunta\"\nimport Formulario from \"./components/Formulario\"\nimport Listado from \"./components/Listado\"\nimport ControlPresupuesto from \"./components/ControlPresupuesto\"\n\nfunction App() {\n\n  // Definir el state\n  const [ presupuesto, guardarPresupuesto ] = useState(0);\n  const [ restante, guardarRestante ] = useState(0);\n  const [ mostrarpregunta, actualizarPregunta] = useState(true);\n  const [ gastos, guardarGastos ] = useState([]);\n  const [ gasto, guardarGasto ] = useState({});\n  const [ creargasto, guardarCrearGasto ] = useState(false);\n\n  //useEffect que actualiza el restante\n  useEffect(() => {\n    if(creargasto) {\n\n      // Agrega el nuevo presupuesto\n      guardarGastos([...gastos, gasto]);\n\n      // Resta del presupuesto actual\n      const presupuestoRestante = restante - gasto.cantidad;\n      guardarRestante(presupuestoRestante);\n\n      // Resetear a false\n      guardarCrearGasto(false);\n\n    }\n  }, [gasto, creargasto, gastos, restante]);\n\n\n\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Gasto Semanal</h1>\n\n        <div className=\"contenido-principal contenido\">\n          { mostrarpregunta ?\n          ( \n            <Pregunta\n              guardarPresupuesto={guardarPresupuesto}\n              guardarRestante={guardarRestante}\n              actualizarPregunta={actualizarPregunta}\n            />\n            ) :\n            ( \n              <div className=\"row\">\n              <div className=\"one-half column\">\n                <Formulario\n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <Listado \n                  gastos={gastos}\n                />\n\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n              </div>\n            </div>\n            ) }\n            \n        </div>\n      </header>\n    </div>    \n      );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}